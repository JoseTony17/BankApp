/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import core.controllers.AccountController;
import core.controllers.TransactionController;
import core.controllers.UserController;
import core.controllers.utils.Response;
import core.models.Account;
import core.models.Transaction;
import core.models.User;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class BankFrame extends javax.swing.JFrame {

    // Crear instancias de los controladores necesarios para realizar las
    // operaciones
    private UserController userController;
    private AccountController accountController;
    private TransactionController transactionController;

    public BankFrame() {
        initComponents();
        // Inicializar los controladores
        userController = new UserController();
        accountController = new AccountController();
        transactionController = new TransactionController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TabbedPaneApp = new javax.swing.JTabbedPane();
        PanelRegisterUser = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        lblFirstname = new javax.swing.JLabel();
        lblLastname = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtFirstname = new javax.swing.JTextField();
        txtLastname = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        btnRegisterUser = new javax.swing.JButton();
        PanelCreateAccount = new javax.swing.JPanel();
        lblTitleCreate = new javax.swing.JLabel();
        lblUserID = new javax.swing.JLabel();
        lblInitialBalance = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        txtInitialBalance = new javax.swing.JTextField();
        btnCreateAccount = new javax.swing.JButton();
        PanelMakeTransaction = new javax.swing.JPanel();
        lblMakeTransaction = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        lblSourceAccount = new javax.swing.JLabel();
        lblDestinationAccount = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        txtSourceAccount = new javax.swing.JTextField();
        txtDestinationAccount = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        cbxType = new javax.swing.JComboBox<>();
        btnExecuteTransaction = new javax.swing.JButton();
        PanelListUsers = new javax.swing.JPanel();
        lblListUsers = new javax.swing.JLabel();
        scrlListUsers = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        btnRefreshUsers = new javax.swing.JButton();
        PanelListAccounts = new javax.swing.JPanel();
        lblListAccounts = new javax.swing.JLabel();
        scrlListAccounts = new javax.swing.JScrollPane();
        tableAccounts = new javax.swing.JTable();
        btnRefreshAccounts = new javax.swing.JButton();
        PanelListTransactions = new javax.swing.JPanel();
        lblListTransactions = new javax.swing.JLabel();
        scrlListTransactions = new javax.swing.JScrollPane();
        tableTransactions = new javax.swing.JTable();
        btnRefreshTransactions = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setText("Register User");

        lblID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblID.setText("ID");

        lblFirstname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFirstname.setText("Firstname");

        lblLastname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLastname.setText("Lastname");

        lblAge.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAge.setText("Age");

        btnRegisterUser.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnRegisterUser.setText("Register");
        btnRegisterUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelRegisterUserLayout = new javax.swing.GroupLayout(PanelRegisterUser);
        PanelRegisterUser.setLayout(PanelRegisterUserLayout);
        PanelRegisterUserLayout.setHorizontalGroup(
                PanelRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelRegisterUserLayout.createSequentialGroup()
                                .addGroup(PanelRegisterUserLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelRegisterUserLayout.createSequentialGroup()
                                                .addGap(239, 239, 239)
                                                .addComponent(lblTitle)
                                                .addGap(0, 270, Short.MAX_VALUE))
                                        .addGroup(PanelRegisterUserLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(PanelRegisterUserLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblFirstname)
                                                        .addComponent(lblLastname)
                                                        .addComponent(lblAge)
                                                        .addComponent(lblID))
                                                .addGap(18, 18, 18)
                                                .addGroup(PanelRegisterUserLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtID, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(txtLastname,
                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(txtAge,
                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(txtFirstname,
                                                                javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addContainerGap())
                        .addGroup(PanelRegisterUserLayout.createSequentialGroup()
                                .addGap(259, 259, 259)
                                .addComponent(btnRegisterUser)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        PanelRegisterUserLayout.setVerticalGroup(
                PanelRegisterUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelRegisterUserLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblTitle)
                                .addGap(18, 18, 18)
                                .addGroup(PanelRegisterUserLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblID))
                                .addGap(18, 18, 18)
                                .addGroup(PanelRegisterUserLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblFirstname))
                                .addGap(18, 18, 18)
                                .addGroup(PanelRegisterUserLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblLastname))
                                .addGap(18, 18, 18)
                                .addGroup(PanelRegisterUserLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblAge))
                                .addGap(18, 18, 18)
                                .addComponent(btnRegisterUser)
                                .addContainerGap(83, Short.MAX_VALUE)));

        TabbedPaneApp.addTab("Register User", PanelRegisterUser);

        lblTitleCreate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitleCreate.setText("Create Account");

        lblUserID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblUserID.setText("User ID");

        lblInitialBalance.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInitialBalance.setText("Initial Balance");

        btnCreateAccount.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnCreateAccount.setText("Create");
        btnCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelCreateAccountLayout = new javax.swing.GroupLayout(PanelCreateAccount);
        PanelCreateAccount.setLayout(PanelCreateAccountLayout);
        PanelCreateAccountLayout.setHorizontalGroup(
                PanelCreateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelCreateAccountLayout.createSequentialGroup()
                                .addGroup(PanelCreateAccountLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelCreateAccountLayout.createSequentialGroup()
                                                .addGap(238, 238, 238)
                                                .addComponent(lblTitleCreate))
                                        .addGroup(PanelCreateAccountLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(PanelCreateAccountLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblUserID)
                                                        .addComponent(lblInitialBalance))
                                                .addGap(18, 18, 18)
                                                .addGroup(PanelCreateAccountLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtInitialBalance)
                                                        .addComponent(txtUserID, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                521, Short.MAX_VALUE))))
                                .addContainerGap())
                        .addGroup(PanelCreateAccountLayout.createSequentialGroup()
                                .addGap(265, 265, 265)
                                .addComponent(btnCreateAccount)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        PanelCreateAccountLayout.setVerticalGroup(
                PanelCreateAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelCreateAccountLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblTitleCreate)
                                .addGap(18, 18, 18)
                                .addGroup(PanelCreateAccountLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblUserID))
                                .addGap(18, 18, 18)
                                .addGroup(PanelCreateAccountLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtInitialBalance, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblInitialBalance))
                                .addGap(18, 18, 18)
                                .addComponent(btnCreateAccount)
                                .addContainerGap(163, Short.MAX_VALUE)));

        TabbedPaneApp.addTab("Create Account", PanelCreateAccount);

        lblMakeTransaction.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMakeTransaction.setText("Make Transaction");

        lblType.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblType.setText("Type");

        lblSourceAccount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSourceAccount.setText("Source Account");

        lblDestinationAccount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDestinationAccount.setText("Destination Account");

        lblAmount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAmount.setText("Amount");

        txtDestinationAccount.setToolTipText("");

        cbxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deposit", "Withdraw", "Transfer" }));

        btnExecuteTransaction.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnExecuteTransaction.setText("Execute");
        btnExecuteTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteTransactionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelMakeTransactionLayout = new javax.swing.GroupLayout(PanelMakeTransaction);
        PanelMakeTransaction.setLayout(PanelMakeTransactionLayout);
        PanelMakeTransactionLayout.setHorizontalGroup(
                PanelMakeTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelMakeTransactionLayout.createSequentialGroup()
                                .addGroup(PanelMakeTransactionLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelMakeTransactionLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(PanelMakeTransactionLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblType)
                                                        .addComponent(lblAmount)
                                                        .addComponent(lblDestinationAccount)
                                                        .addComponent(lblSourceAccount))
                                                .addGap(18, 18, 18)
                                                .addGroup(PanelMakeTransactionLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txtDestinationAccount,
                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(txtSourceAccount,
                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(cbxType, 0, 485, Short.MAX_VALUE)
                                                        .addComponent(txtAmount,
                                                                javax.swing.GroupLayout.Alignment.TRAILING)))
                                        .addGroup(PanelMakeTransactionLayout.createSequentialGroup()
                                                .addGap(227, 227, 227)
                                                .addComponent(lblMakeTransaction)))
                                .addContainerGap())
                        .addGroup(PanelMakeTransactionLayout.createSequentialGroup()
                                .addGap(255, 255, 255)
                                .addComponent(btnExecuteTransaction)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        PanelMakeTransactionLayout.setVerticalGroup(
                PanelMakeTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelMakeTransactionLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblMakeTransaction)
                                .addGap(18, 18, 18)
                                .addGroup(PanelMakeTransactionLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cbxType, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblType))
                                .addGap(18, 18, 18)
                                .addGroup(PanelMakeTransactionLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtSourceAccount, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblSourceAccount))
                                .addGap(18, 18, 18)
                                .addGroup(PanelMakeTransactionLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtDestinationAccount, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblDestinationAccount))
                                .addGap(18, 18, 18)
                                .addGroup(PanelMakeTransactionLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblAmount))
                                .addGap(18, 18, 18)
                                .addComponent(btnExecuteTransaction)
                                .addContainerGap(83, Short.MAX_VALUE)));

        TabbedPaneApp.addTab("Make Transaction", PanelMakeTransaction);

        lblListUsers.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblListUsers.setText("List Users");

        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null }
                },
                new String[] {
                        "ID", "Fullname", "Age", "Number of Accounts"
                }) {
            Class[] types = new Class[] {
                    java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        scrlListUsers.setViewportView(tableUsers);

        btnRefreshUsers.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnRefreshUsers.setText("Refresh");
        btnRefreshUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshUsersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelListUsersLayout = new javax.swing.GroupLayout(PanelListUsers);
        PanelListUsers.setLayout(PanelListUsersLayout);
        PanelListUsersLayout.setHorizontalGroup(
                PanelListUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelListUsersLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PanelListUsersLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelListUsersLayout.createSequentialGroup()
                                                .addComponent(scrlListUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 616,
                                                        Short.MAX_VALUE)
                                                .addContainerGap())
                                        .addGroup(PanelListUsersLayout.createSequentialGroup()
                                                .addGap(62, 62, 62)
                                                .addComponent(lblListUsers)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnRefreshUsers)
                                                .addGap(88, 88, 88)))));
        PanelListUsersLayout.setVerticalGroup(
                PanelListUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelListUsersLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(PanelListUsersLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblListUsers)
                                        .addComponent(btnRefreshUsers))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(scrlListUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                .addContainerGap()));

        TabbedPaneApp.addTab("List Users", PanelListUsers);

        lblListAccounts.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblListAccounts.setText("List Accounts");

        tableAccounts.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null },
                        { null, null, null },
                        { null, null, null },
                        { null, null, null }
                },
                new String[] {
                        "ID", "User ID", "Balance"
                }) {
            Class[] types = new Class[] {
                    java.lang.String.class, java.lang.Long.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        scrlListAccounts.setViewportView(tableAccounts);

        btnRefreshAccounts.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnRefreshAccounts.setText("Refresh");
        btnRefreshAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshAccountsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelListAccountsLayout = new javax.swing.GroupLayout(PanelListAccounts);
        PanelListAccounts.setLayout(PanelListAccountsLayout);
        PanelListAccountsLayout.setHorizontalGroup(
                PanelListAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelListAccountsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scrlListAccounts, javax.swing.GroupLayout.DEFAULT_SIZE, 616,
                                        Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(PanelListAccountsLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(lblListAccounts)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRefreshAccounts)
                                .addGap(90, 90, 90)));
        PanelListAccountsLayout.setVerticalGroup(
                PanelListAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelListAccountsLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(PanelListAccountsLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblListAccounts)
                                        .addComponent(btnRefreshAccounts))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(scrlListAccounts, javax.swing.GroupLayout.DEFAULT_SIZE, 264,
                                        Short.MAX_VALUE)
                                .addContainerGap()));

        TabbedPaneApp.addTab("List Accounts", PanelListAccounts);

        lblListTransactions.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblListTransactions.setText("List Transactions");

        tableTransactions.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null }
                },
                new String[] {
                        "Type", "Source Account ID", "Destination Account ID", "Amount"
                }) {
            Class[] types = new Class[] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean[] {
                    false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        scrlListTransactions.setViewportView(tableTransactions);

        btnRefreshTransactions.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnRefreshTransactions.setText("Refresh");
        btnRefreshTransactions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTransactionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelListTransactionsLayout = new javax.swing.GroupLayout(PanelListTransactions);
        PanelListTransactions.setLayout(PanelListTransactionsLayout);
        PanelListTransactionsLayout.setHorizontalGroup(
                PanelListTransactionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelListTransactionsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scrlListTransactions, javax.swing.GroupLayout.DEFAULT_SIZE, 616,
                                        Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(PanelListTransactionsLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(lblListTransactions)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRefreshTransactions)
                                .addGap(89, 89, 89)));
        PanelListTransactionsLayout.setVerticalGroup(
                PanelListTransactionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelListTransactionsLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(PanelListTransactionsLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblListTransactions)
                                        .addComponent(btnRefreshTransactions))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(scrlListTransactions, javax.swing.GroupLayout.DEFAULT_SIZE, 264,
                                        Short.MAX_VALUE)
                                .addContainerGap()));

        TabbedPaneApp.addTab("List Transactions", PanelListTransactions);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TabbedPaneApp));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(TabbedPaneApp, javax.swing.GroupLayout.PREFERRED_SIZE, 356,
                                javax.swing.GroupLayout.PREFERRED_SIZE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterUserActionPerformed(java.awt.event.ActionEvent evt) {
        // Botón para registrar un nuevo usuario. Se obtienen los datos y se envian al
        // controller
        try {
            String id = txtID.getText();
            String firstname = txtFirstname.getText();
            String lastname = txtLastname.getText();
            String age = txtAge.getText();

            Response response = userController.register(id, firstname, lastname, age);

            if (response.getStatus() >= 500) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(),
                        JOptionPane.ERROR_MESSAGE);
            } else if (response.getStatus() >= 400) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Warning " + response.getStatus(),
                        JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Information Message",
                        JOptionPane.INFORMATION_MESSAGE);

                txtID.setText("");
                txtFirstname.setText("");
                txtLastname.setText("");
                txtAge.setText("");
                txtAge.setText("");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {
        // Botón para crear una nueva cuenta. Se obtienen los datos y se envian al
        // controller
        try {
            String userId = txtUserID.getText();
            String initialBalance = txtInitialBalance.getText();

            Response response = accountController.createAccount(userId, initialBalance);

            if (response.getStatus() >= 500) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(),
                        JOptionPane.ERROR_MESSAGE);
            } else if (response.getStatus() >= 400) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Warning " + response.getStatus(),
                        JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Information Message",
                        JOptionPane.INFORMATION_MESSAGE);

                txtUserID.setText("");
                txtInitialBalance.setText("");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void btnExecuteTransactionActionPerformed(java.awt.event.ActionEvent evt) {
        // Botón para ejecutar una transacción. Se obtienen los datos y se envian al
        // controller
        try {
            String type = cbxType.getItemAt(cbxType.getSelectedIndex());
            String sourceAccountId = txtSourceAccount.getText();
            String destinationAccountId = txtDestinationAccount.getText();
            String amount = txtAmount.getText();

            Response response = transactionController.executeTransaction(type, sourceAccountId, destinationAccountId,
                    amount);

            if (response.getStatus() >= 500) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(),
                        JOptionPane.ERROR_MESSAGE);
            } else if (response.getStatus() >= 400) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Warning " + response.getStatus(),
                        JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Information Message",
                        JOptionPane.INFORMATION_MESSAGE);

                txtSourceAccount.setText("");
                txtDestinationAccount.setText("");
                txtAmount.setText("");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }// GEN-LAST:event_execTransactionButtonActionPerformed

    private void btnRefreshUsersActionPerformed(java.awt.event.ActionEvent evt) {
        // Botón para actualizar la lista de usuarios.
        try {
            DefaultTableModel model = (DefaultTableModel) tableUsers.getModel();
            model.setRowCount(0);

            Response response = userController.list();

            if (response.getStatus() >= 500) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(),
                        JOptionPane.ERROR_MESSAGE);
            } else if (response.getStatus() >= 400) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Warning " + response.getStatus(),
                        JOptionPane.WARNING_MESSAGE);
            } else if (response.getStatus() >= 204) {
                JOptionPane.showMessageDialog(null, response.getMessage(),
                        "Information Message " + response.getStatus(),
                        JOptionPane.INFORMATION_MESSAGE);
            } else {

                // Obtener la lista de usuarios desde la respuesta
                List<User> users = (List<User>) response.getObject();

                // this.users.sort((obj1, obj2) -> (obj1.getId() - obj2.getId()));
                for (User user : users) {
                    model.addRow(
                            new Object[] { user.getId(), user.getFirstname() + " " + user.getLastname(), user.getAge(),
                                    user.getNumAccounts() });
                }

                JOptionPane.showMessageDialog(null, response.getMessage(), "Information Message",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnRefreshAccountsActionPerformed(java.awt.event.ActionEvent evt) {
        // Botón para actualizar la lista de cuentas.
        try {
            DefaultTableModel model = (DefaultTableModel) tableAccounts.getModel();
            model.setRowCount(0);

            Response response = accountController.listAccounts();

            if (response.getStatus() >= 500) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(),
                        JOptionPane.ERROR_MESSAGE);
            } else if (response.getStatus() >= 400) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Warning " + response.getStatus(),
                        JOptionPane.WARNING_MESSAGE);
            } else if (response.getStatus() >= 204) {
                JOptionPane.showMessageDialog(null, response.getMessage(),
                        "Information Message " + response.getStatus(),
                        JOptionPane.INFORMATION_MESSAGE);
            } else {

                // Obtener la lista de cuentas desde la respuesta
                List<Account> accounts = (List<Account>) response.getObject();

                for (Account account : accounts) {
                    model.addRow(new Object[] { account.getId(), account.getOwner().getId(), account.getBalance() });
                }

                JOptionPane.showMessageDialog(null, response.getMessage(), "Information Message",
                        JOptionPane.INFORMATION_MESSAGE);

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnRefreshTransactionsActionPerformed(java.awt.event.ActionEvent evt) {
        // Botón para actualizar la lista de transacciones.
        try {
            DefaultTableModel model = (DefaultTableModel) tableTransactions.getModel();
            model.setRowCount(0);

            Response response = transactionController.listTransactions();

            if (response.getStatus() >= 500) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(),
                        JOptionPane.ERROR_MESSAGE);
            } else if (response.getStatus() >= 400) {
                JOptionPane.showMessageDialog(null, response.getMessage(), "Warning " + response.getStatus(),
                        JOptionPane.WARNING_MESSAGE);
            } else if (response.getStatus() >= 204) {
                JOptionPane.showMessageDialog(null, response.getMessage(),
                        "Information Message " + response.getStatus(),
                        JOptionPane.INFORMATION_MESSAGE);
            } else {

                // Obtener la lista de transacciones desde la respuesta
                List<Transaction> transactions = (List<Transaction>) response.getObject();

                for (Transaction transaction : transactions) {
                    model.addRow(
                            new Object[] {
                                    transaction.getType().name() + " " + transaction.getDate(),
                                    (transaction.getSourceAccount() != null ? transaction.getSourceAccount().getId()
                                            : "None"),
                                    (transaction.getDestinationAccount() != null
                                            ? transaction.getDestinationAccount().getId()
                                            : "None"),
                                    transaction.getAmount()
                            });
                }

                JOptionPane.showMessageDialog(null, response.getMessage(), "Information Message",
                        JOptionPane.INFORMATION_MESSAGE);

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * @param args the command line arguments
     */
    // public static void main(String args[]) {
    // /* Set the Nimbus look and feel */
    // //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code
    // (optional) ">
    // /* If Nimbus (introduced in Java SE 6) is not available, stay with the
    // default look and feel.
    // * For details see
    // http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
    // */
    // try {
    // for (javax.swing.UIManager.LookAndFeelInfo info :
    // javax.swing.UIManager.getInstalledLookAndFeels()) {
    // if ("Nimbus".equals(info.getName())) {
    // javax.swing.UIManager.setLookAndFeel(info.getClassName());
    // break;
    // }
    // }
    // } catch (ClassNotFoundException ex) {
    // java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE,
    // null, ex);
    // } catch (InstantiationException ex) {
    // java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE,
    // null, ex);
    // } catch (IllegalAccessException ex) {
    // java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE,
    // null, ex);
    // } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    // java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE,
    // null, ex);
    // }
    // //</editor-fold>
    //
    // /* Create and display the form */
    // java.awt.EventQueue.invokeLater(new Runnable() {
    // public void run() {
    // new BankFrame().setVisible(true);
    // }
    // });
    // }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelCreateAccount;
    private javax.swing.JPanel PanelListAccounts;
    private javax.swing.JPanel PanelListTransactions;
    private javax.swing.JPanel PanelListUsers;
    private javax.swing.JPanel PanelMakeTransaction;
    private javax.swing.JPanel PanelRegisterUser;
    private javax.swing.JTabbedPane TabbedPaneApp;
    private javax.swing.JButton btnCreateAccount;
    private javax.swing.JButton btnExecuteTransaction;
    private javax.swing.JButton btnRefreshAccounts;
    private javax.swing.JButton btnRefreshTransactions;
    private javax.swing.JButton btnRefreshUsers;
    private javax.swing.JButton btnRegisterUser;
    private javax.swing.JComboBox<String> cbxType;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblDestinationAccount;
    private javax.swing.JLabel lblFirstname;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblInitialBalance;
    private javax.swing.JLabel lblLastname;
    private javax.swing.JLabel lblListAccounts;
    private javax.swing.JLabel lblListTransactions;
    private javax.swing.JLabel lblListUsers;
    private javax.swing.JLabel lblMakeTransaction;
    private javax.swing.JLabel lblSourceAccount;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitleCreate;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JScrollPane scrlListAccounts;
    private javax.swing.JScrollPane scrlListTransactions;
    private javax.swing.JScrollPane scrlListUsers;
    private javax.swing.JTable tableAccounts;
    private javax.swing.JTable tableTransactions;
    private javax.swing.JTable tableUsers;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtDestinationAccount;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtInitialBalance;
    private javax.swing.JTextField txtLastname;
    private javax.swing.JTextField txtSourceAccount;
    private javax.swing.JTextField txtUserID;
    // End of variables declaration//GEN-END:variables
}
